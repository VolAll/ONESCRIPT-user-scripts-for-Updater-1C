#use "updater1c"

// ****************************************************************************
// Переменные модуля
// ****************************************************************************

Перем errors;		// Признак того, что при выполнении скрипта были ошибки.
Перем updater;		// Обновлятор, через который мы получаем информацию о базе,
					// а также вызываем различные функции обновлятора.
Перем connector;	// Коннектор для подключения к базе.
Перем v8;			// Само подключение к базе через коннектор.

// ****************************************************************************
// Ваш код для выполнения обновлятором
// ****************************************************************************

Процедура Главная()

	// Обязательно прочтите статью про COM-объекты
	// http://helpme1c.ru/ispolzovanie-com-obektov-v-onescript

	// создаём пользователя иб
	ПользовательИБ = v8.ПользователиИнформационнойБазы.СоздатьПользователя(); 
	ПользовательИБ.Имя = "Иванов"; 
	ПользовательИБ.ПолноеИмя = "Иванов";
	ПользовательИБ.Пароль = "";
	ПользовательИБ.ПоказыватьВСпискеВыбора = Истина;
	ПользовательИБ.АутентификацияОС = Ложь;
	 
	Если v8.ПользователиИнформационнойБазы.НайтиПоИмени(ПользовательИБ.Имя) = Неопределено Тогда		
	    ПользовательИБ.Записать();	
	    Сообщить("Новый пользователь создан.");
	Иначе
	    Сообщить("Пользователь с таким именем уже есть в базе!");	
	    Возврат;
	КонецЕсли;
	
	// создаём пользователя справочника
	Пользователь = v8.Справочники.Пользователи.СоздатьЭлемент();	
	Пользователь.Наименование = ПользовательИБ.ПолноеИмя;
	
	ОписаниеПользователяИБ = v8.NewObject("Структура");
	ОписаниеПользователяИБ.Вставить("Действие", "Записать");
	ОписаниеПользователяИБ.Вставить(
		"УникальныйИдентификатор", ПользовательИБ.УникальныйИдентификатор);
	
	Пользователь.ДополнительныеСвойства.Вставить(
		"ОписаниеПользователяИБ", ОписаниеПользователяИБ);
	Пользователь.Записать();	
	
	// назначаем права пользователю иб
	ПользовательИБ = v8.ПользователиИнформационнойБазы.НайтиПоИмени(ПользовательИБ.Имя);
	ПользовательИБ.Роли.Добавить(v8.Метаданные.Роли.ПолныеПрава);
	ПользовательИБ.Записать();

КонецПроцедуры

// ****************************************************************************
// Служебные процедуры
// ****************************************************************************

Процедура ПриНачалеРаботы()

	errors = Ложь;

	updater = Новый Updater1C;

	// Если в скрипте не планируется использовать
	// подключение к базе - просто закомментируйте
	// две нижние строки.
	connector = Новый COMОбъект("V" + updater.PlatformRelease + ".COMConnector");
	v8 = updater.BaseConnect(connector);
	
КонецПроцедуры

Процедура ПриОкончанииРаботы()

	Если v8 <> Неопределено Тогда
		Попытка
			ОсвободитьОбъект(v8);
			v8 = Неопределено;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Если connector <> Неопределено Тогда
		Попытка
			ОсвободитьОбъект(connector);
			connector = Неопределено;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Если updater <> Неопределено Тогда
		Попытка
			ОсвободитьОбъект(updater);
			updater = Неопределено;
		Исключение
		КонецПопытки;
	КонецЕсли;

	// Ожидание в конце выполнения программы
	// магическим образом помогает избежать
	// проблем с освобождением ресурсов, если
	// мы использовали внешнее подключение к
	// базе. Могут быть случаи, когда недостаточно
	// 1 секунды.
	Приостановить(1000);

	Если errors Тогда
		ЗавершитьРаботу(1);
	КонецЕсли;

КонецПроцедуры

// ****************************************************************************
// Инициализация и запуск скрипта
// ****************************************************************************

ПриНачалеРаботы();

Попытка	
	Главная();	
Исключение
	errors = Истина;
	Сообщить("<span class='red'><b>" + ОписаниеОшибки() + "</b></span>");
КонецПопытки;

ПриОкончанииРаботы();
